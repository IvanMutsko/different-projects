{"mappings":"AAAA,MAGMA,EAAYC,eAAgBC,GAChC,IACE,MAAMC,QAAiBC,MACrB,uDAAgCF,cAGlC,aADyBC,EAASE,M,CAElC,MAAOC,GACPC,QAAQC,IAAIF,E,GAMhBC,QAAQC,IAAIC,wBCfZ,MAAMC,EAASC,SAASC,cAAc,iBAChCC,EAAcF,SAASC,cAAc,eACrCE,EAAaH,SAASC,cAAc,cAE1CC,EAAYE,iBAAiB,SAE7B,WACE,IAAIb,EAAOW,EAAYG,MAAMC,OAEhB,KAATf,EACFF,EAAUE,GAAMgB,MAAKC,GAMzB,SAAkCC,GAChCN,EAAWO,UAAY,GAEvB,MAAMC,EAASF,EAAYG,QAC3BhB,QAAQC,IAAIc,QAEGE,IAAXF,GACFA,EAAOG,SAAQvB,IACb,MAAMwB,EAAS,mBAAmBxB,EAAKyB,qBAAqBzB,EAAK0B,SAAS1B,EAAK2B,WAAW3B,EAAK4B,wBAC/FhB,EAAWiB,mBAAmB,YAAaL,EAAO,G,CAfjBM,CAAyBb,KAE5DL,EAAWO,UAAY,E,IAoB3BX,EAAOK,iBAAiB,SAExB,SAAwBkB,GACtBA,EAAIC,iBAEc,IAAIC,SAASzB,GAErBe,SAAQT,GAAST,QAAQC,IAAIQ,I","sources":["src/weather/js/fetchCityCode.js","src/weather/js/index.js"],"sourcesContent":["const GEOCODING_API = 'https://geocoding-api.open-meteo.com/v1';\nconst API_KEY = 'c807f2acdd74ab8a78287327fdf94a6e';\n\nconst fetchCity = async function (city) {\n  try {\n    const response = await fetch(\n      `${GEOCODING_API}/search?name=${city}&count=10`\n    );\n    const findedCity = await response.json();\n    return findedCity;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { fetchCity };\n\nconsole.log(GeolocationCoordinates)","import { fetchCity } from './fetchCityCode';\n\nconst formEl = document.querySelector('#weather-form');\nconst cityInputEl = document.querySelector('.city-input');\nconst findListEl = document.querySelector('.city-list');\n\ncityInputEl.addEventListener('input', onFillingInput);\n\nfunction onFillingInput() {\n  let city = cityInputEl.value.trim();\n\n  if (city !== '') {\n    fetchCity(city).then(findedCity => renderMarkupFindedCities(findedCity));\n  } else {\n    findListEl.innerHTML = '';\n  }\n}\n\nfunction renderMarkupFindedCities(citiesArray) {\n  findListEl.innerHTML = '';\n\n  const cities = citiesArray.results;\n  console.log(cities);\n\n  if (cities !== undefined) {\n    cities.forEach(city => {\n      const markup = `<li><button id=\"${city.id}\" type=\"button\">${city.name}, ${city.admin1}, ${city.country}</button></li>`;\n      findListEl.insertAdjacentHTML('beforeend', markup);\n    });\n  }\n}\n\n// ======================================\n\nformEl.addEventListener('click', onFindBtnClick);\n\nfunction onFindBtnClick(evt) {\n  evt.preventDefault();\n\n  const formValue = new FormData(formEl);\n\n  formValue.forEach(value => console.log(value));\n}\n"],"names":["$7ea31680603537cc$export$f9b5030464ac40b3","async","city","response","fetch","json","error","console","log","GeolocationCoordinates","$99aac862871e75a6$var$formEl","document","querySelector","$99aac862871e75a6$var$cityInputEl","$99aac862871e75a6$var$findListEl","addEventListener","value","trim","then","findedCity","citiesArray","innerHTML","cities","results","undefined","forEach","markup","id","name","admin1","country","insertAdjacentHTML","$99aac862871e75a6$var$renderMarkupFindedCities","evt","preventDefault","FormData"],"version":3,"file":"weather.d3d45771.js.map"}