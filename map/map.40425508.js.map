{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-505e7d439705e393.js","src/map/js/fetchweather.js","node_modules/@parcel/runtime-js/lib/runtime-678e6a32201a7ca4.js","node_modules/@parcel/runtime-js/lib/runtime-48406ce74a8e42c4.js","src/map/js/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1W2P9\\\":\\\"map.40425508.js\\\",\\\"gleLI\\\":\\\"day.6a5ca926.jpeg\\\",\\\"cu9el\\\":\\\"night1.cccc2448.webp\\\",\\\"5Oa7e\\\":\\\"map.98287c0c.css\\\",\\\"bUaHj\\\":\\\"img-finder.d99fbf08.js\\\"}\"));","const URL_WEATHER_API = 'https://api.openweathermap.org/data/2.5/weather?';\nconst API_KEY = 'c807f2acdd74ab8a78287327fdf94a6e';\n\nconst fetchWeather = async function (latitude, longitude) {\n  try {\n    const response = await fetch(\n      `${URL_WEATHER_API}lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`\n    );\n    const weatherDate = await response.json();\n    return weatherDate;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { fetchWeather };\n","module.exports = require('./helpers/bundle-url').getBundleURL('1W2P9') + \"../\" + require('./helpers/bundle-manifest').resolve(\"gleLI\");","module.exports = require('./helpers/bundle-url').getBundleURL('1W2P9') + \"../\" + require('./helpers/bundle-manifest').resolve(\"cu9el\");","import 'normalize.css';\nimport { fetchWeather } from './fetchweather';\nimport background_day from '../img/day.jpeg';\nimport background_night from '../img/night1.webp';\n\nconst mapEl = document.querySelectorAll('#map path');\nconst stateNameEl = document.querySelector('.state');\nconst weatherBlockEl = document.querySelector('#weather-block');\nconst containerEl = document.querySelector('.container');\nconst themeCheckboxEl = document.querySelector('.theme-check');\nconst titleEl = document.querySelector('.title');\n\nlet currentState = '';\n\nmapEl.forEach(state => {\n  state.style.fill = '#ffd700';\n  state.style.fillOpacity = '0.3';\n  state.style.stroke = 'rgba(0, 0, 0, 0.3)';\n  state.style.strokeWidth = '1px';\n\n  state.addEventListener('mouseenter', evt => {\n    state.style.fill = '#0057b8';\n\n    const stateNameText = state.getAttribute('title');\n    currentState = stateNameText;\n    stateNameEl.textContent = `, ${stateNameText}`;\n  });\n\n  state.addEventListener('mouseleave', evt => {\n    state.style.fill = '#ffd700';\n    stateNameEl.textContent = '';\n  });\n\n  state.addEventListener('click', evt => {\n    const geoCodeString = evt.target.getAttribute('data-geocode');\n\n    const latitude = geoCodeString.split(',')[0].trim();\n    const longitude = geoCodeString.split(',')[1].trim();\n\n    fetchWeather(latitude, longitude).then(weatherData => {\n      const { main, weather, wind, clouds, sys } = weatherData;\n\n      const weatherDataForMarkup = {\n        temp: Math.round(main.temp),\n        feelsLike: Math.round(main.feels_like),\n        pressure: (main.pressure * 0.750062).toFixed(0),\n        humidity: main.humidity,\n        windSpeed: Math.round(wind.speed),\n        windGust: Math.round(wind.gust),\n        clouds: clouds.all,\n        sunrise: formatUnixTime(sys.sunrise),\n        sunset: formatUnixTime(sys.sunset),\n        description: weather[0].description,\n        icon: weather[0].icon,\n        main: weather[0].main,\n        id: weather[0].id,\n      };\n\n      weatherBlockEl.textContent = '';\n\n      weatherBlockEl.classList.remove('visually-hidden');\n\n      createMarkupWeather(weatherDataForMarkup);\n    });\n  });\n});\n\nfunction createMarkupWeather(data) {\n  const markup = `\n  <div class=\"weather-description\">\n          <h2 class=\"weather-state\">${currentState}</h2>\n          <h2 class=\"descr-title\">${\n            data.description.charAt(0).toUpperCase() + data.description.slice(1)\n          }</h2>\n          <img\n            class=\"weather-img\"\n            src=\"https://openweathermap.org/img/wn/${data.icon}@2x.png\"\n          />\n          <ul class=\"time-wrap weather-list\">\n                <li>sunrise: ${data.sunrise}</li>\n                <li>sunset: ${data.sunset}</li>\n              </ul>\n          </ul>\n        </div>\n        <div class=\"wether-data-wrap\">\n          <ul class=\"weather-list\">\n            <li>Temperature: ${data.temp} °C</li>\n            <li>Feels like: ${data.feelsLike} °C</li>\n            <li>Wind: ${data.windSpeed} m/s</li>\n            <li>Wind gust: ${data.windGust} m/s</li>\n          </ul>\n          <ul class=\"weather-list\">\n            <li>Pressure: ${data.pressure} mmHg</li>\n            <li>Humidity: ${data.humidity} %</li>\n            <li>Cloudiness: ${data.clouds} %</li>\n          </ul>\n        </div>\n  `;\n\n  weatherBlockEl.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction formatUnixTime(time) {\n  const date = new Date(time * 1000);\n\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n\n  return `${hours}:${minutes}`;\n}\n\nsetStartTheme();\n\nfunction setStartTheme() {\n  // const startTheme = new Date().getHours();\n  const startTheme = 2;\n  if (startTheme > 7 && startTheme < 21) {\n    console.log('dayyyy');\n    changeTheme(false);\n    return;\n  }\n  console.log('night');\n  themeCheckboxEl.setAttribute('checked', 'checked');\n  changeTheme(true);\n}\n\nthemeCheckboxEl.addEventListener('click', () => {\n  const themeMode = themeCheckboxEl.checked;\n  changeTheme(themeMode);\n});\n\nfunction changeTheme(mode) {\n  console.log(mode);\n  if (mode) {\n    containerEl.style.backgroundImage = `url(${background_night})`;\n    titleEl.classList.remove('title-light');\n    titleEl.classList.add('title-dark');\n    return;\n  }\n\n  titleEl.classList.remove('title-dark');\n  titleEl.classList.add('title-light');\n  containerEl.style.backgroundImage = `url(${background_day})`;\n}\n"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","parcelRequire","register","JSON","parse","$bpxeT","$a0ce4a79f701afff$export$7a954b5c9a93cc61","$parcel$interopDefault","$2TvXO","mark","_callee","latitude","longitude","response","weatherDate","fetch","concat","_ctx","sent","json","console","log","t0","$dbd7ecf8a14ee39c$exports","getBundleURL","resolve","$46004809dc94ccdc$exports","$6b5c088a86eb94cb$var$mapEl","document","querySelectorAll","$6b5c088a86eb94cb$var$stateNameEl","querySelector","$6b5c088a86eb94cb$var$weatherBlockEl","$6b5c088a86eb94cb$var$containerEl","$6b5c088a86eb94cb$var$themeCheckboxEl","$6b5c088a86eb94cb$var$titleEl","$6b5c088a86eb94cb$var$currentState","$6b5c088a86eb94cb$var$formatUnixTime","time","date","Date","hours","getHours","toString","padStart","minutes","getMinutes","$6b5c088a86eb94cb$var$changeTheme","mode","style","backgroundImage","classList","remove","add","forEach","state","fill","fillOpacity","stroke","strokeWidth","addEventListener","evt","stateNameText","getAttribute","textContent","geoCodeString","target","split","trim","then","weatherData","data","markup","main","weather","wind","clouds","sys","weatherDataForMarkup","temp","Math","round","feelsLike","feels_like","pressure","toFixed","humidity","windSpeed","speed","windGust","gust","all","sunrise","sunset","description","icon","charAt","toUpperCase","slice","insertAdjacentHTML","startTheme","setAttribute","$6b5c088a86eb94cb$var$setStartTheme","checked"],"version":3,"file":"map.40425508.js.map"}