{"mappings":"AAAA,MAGMA,EAAeC,eAAgBC,EAAUC,GAC7C,IACE,MAAMC,QAAiBC,MACrB,uDAAyBH,SAAgBC,yDAG3C,aAD0BC,EAASE,M,CAEnC,MAAOC,GACPC,QAAQC,IAAIF,E,GCRVG,EAAQC,SAASC,iBAAiB,aAClCC,EAAcF,SAASG,cAAc,UACrCC,EAAiBJ,SAASG,cAAc,kBAwF9C,SAASE,EAAeC,GACtB,MAAMC,EAAO,IAAIC,KAAY,IAAPF,GAKtB,MAAO,GAHOC,EAAKE,WAAWC,WAAWC,SAAS,EAAG,QACrCJ,EAAKK,aAAaF,WAAWC,SAAS,EAAG,M,CA1F3DZ,EAAMc,SAAQC,IACZA,EAAMC,MAAMC,KAAO,UACnBF,EAAMC,MAAME,YAAc,MAC1BH,EAAMC,MAAMG,OAAS,qBACrBJ,EAAMC,MAAMI,YAAc,MAE1BL,EAAMM,iBAAiB,cAAcC,IACnCP,EAAMC,MAAMC,KAAO,UAEnB,MAAMM,EAAgBR,EAAMS,aAAa,SACzCrB,EAAYsB,YAAc,KAAKF,GAAe,IAGhDR,EAAMM,iBAAiB,cAAcC,IACnCP,EAAMC,MAAMC,KAAO,UACnBd,EAAYsB,YAAc,EAAE,IAG9BV,EAAMM,iBAAiB,SAASC,IAC9B,MAAMI,EAAgBJ,EAAIK,OAAOH,aAAa,gBAExChC,EAAWkC,EAAcE,MAAM,KAAK,GAAGC,OACvCpC,EAAYiC,EAAcE,MAAM,KAAK,GAAGC,OAE9CvC,EAAaE,EAAUC,GAAWqC,MAAKC,IACrC,MAAMC,KAAEA,EAAIC,QAAEA,EAAOC,KAAEA,EAAIC,OAAEA,EAAMC,IAAEA,GAAQL,EAEvCM,EAAuB,CAC3BC,KAAMN,EAAKM,KACXC,UAAWP,EAAKQ,WAChBC,UAA2B,QAAhBT,EAAKS,UAAqBC,QAAQ,GAC7CC,SAAUX,EAAKW,SACfC,UAAWV,EAAKW,MAChBC,SAAUZ,EAAKa,KACfZ,OAAQA,EAAOa,IACfC,QAAS3C,EAAe8B,EAAIa,SAC5BC,OAAQ5C,EAAe8B,EAAIc,QAC3BC,YAAalB,EAAQ,GAAGkB,YACxBC,KAAMnB,EAAQ,GAAGmB,KACjBpB,KAAMC,EAAQ,GAAGD,KACjBqB,GAAIpB,EAAQ,GAAGoB,IAGjBhD,EAAeoB,YAAc,GAE7BpB,EAAeiD,UAAUC,OAAO,mBAOtC,SAA6BC,GAC3B,MAAMC,EAAS,4EAGLD,EAAKL,YAAYO,OAAO,GAAGC,cAAgBH,EAAKL,YAAYS,MAAM,gHAIzBJ,EAAKJ,2GAG3BI,EAAKP,6CACNO,EAAKN,gLAMJM,EAAKlB,6CACNkB,EAAKjB,4CACXiB,EAAKZ,kDACAY,EAAKV,sGAGNU,EAAKf,iDACLe,EAAKb,gDACHa,EAAKrB,qDAKjC9B,EAAewD,mBAAmB,YAAaJ,E,CApC3CK,CAAoBzB,EAAqB,GACzC,GACF","sources":["src/map/js/fetchweather.js","src/map/js/index.js"],"sourcesContent":["const URL_WEATHER_API = 'https://api.openweathermap.org/data/2.5/weather?';\nconst API_KEY = 'c807f2acdd74ab8a78287327fdf94a6e';\n\nconst fetchWeather = async function (latitude, longitude) {\n  try {\n    const response = await fetch(\n      `${URL_WEATHER_API}lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`\n    );\n    const weatherDate = await response.json();\n    return weatherDate;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { fetchWeather };\n","import 'normalize.css';\nimport { fetchWeather } from './fetchweather';\n\nconst mapEl = document.querySelectorAll('#map path');\nconst stateNameEl = document.querySelector('.state');\nconst weatherBlockEl = document.querySelector('#weather-block');\n\nmapEl.forEach(state => {\n  state.style.fill = '#ffd700';\n  state.style.fillOpacity = '0.3';\n  state.style.stroke = 'rgba(0, 0, 0, 0.3)';\n  state.style.strokeWidth = '1px';\n\n  state.addEventListener('mouseenter', evt => {\n    state.style.fill = '#0057b8';\n\n    const stateNameText = state.getAttribute('title');\n    stateNameEl.textContent = `, ${stateNameText}`;\n  });\n\n  state.addEventListener('mouseleave', evt => {\n    state.style.fill = '#ffd700';\n    stateNameEl.textContent = '';\n  });\n\n  state.addEventListener('click', evt => {\n    const geoCodeString = evt.target.getAttribute('data-geocode');\n\n    const latitude = geoCodeString.split(',')[0].trim();\n    const longitude = geoCodeString.split(',')[1].trim();\n\n    fetchWeather(latitude, longitude).then(weatherData => {\n      const { main, weather, wind, clouds, sys } = weatherData;\n\n      const weatherDataForMarkup = {\n        temp: main.temp, //\n        feelsLike: main.feels_like, //\n        pressure: (main.pressure * 0.750062).toFixed(0), //\n        humidity: main.humidity, //\n        windSpeed: wind.speed, //\n        windGust: wind.gust, //\n        clouds: clouds.all, //\n        sunrise: formatUnixTime(sys.sunrise), //\n        sunset: formatUnixTime(sys.sunset), //\n        description: weather[0].description, //\n        icon: weather[0].icon,\n        main: weather[0].main,\n        id: weather[0].id, //\n      };\n\n      weatherBlockEl.textContent = '';\n\n      weatherBlockEl.classList.remove('visually-hidden');\n\n      createMarkupWeather(weatherDataForMarkup);\n    });\n  });\n});\n\nfunction createMarkupWeather(data) {\n  const markup = `\n  <div class=\"weather-description\">\n          <h2 class=\"descr-title\">${\n            data.description.charAt(0).toUpperCase() + data.description.slice(1)\n          }</h2>\n          <img\n            class=\"weather-img\"\n            src=\"https://openweathermap.org/img/wn/${data.icon}@2x.png\"\n          />\n          <ul class=\"time-wrap weather-list\">\n                <li>sunrise: ${data.sunrise}</li>\n                <li>sunset: ${data.sunset}</li>\n              </ul>\n          </ul>\n        </div>\n        <div class=\"wether-data-wrap\">\n          <ul class=\"weather-list\">\n            <li>Temperature: ${data.temp} °C</li>\n            <li>Feels like: ${data.feelsLike} °C</li>\n            <li>Wind: ${data.windSpeed} m/s</li>\n            <li>Wind gust: ${data.windGust} m/s</li>\n          </ul>\n          <ul class=\"weather-list\">\n            <li>Pressure: ${data.pressure} mmHg</li>\n            <li>Humidity: ${data.humidity} %</li>\n            <li>Cloudiness: ${data.clouds} %</li>\n          </ul>\n        </div>\n  `;\n\n  weatherBlockEl.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction formatUnixTime(time) {\n  const date = new Date(time * 1000);\n\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n\n  return `${hours}:${minutes}`;\n}\n"],"names":["$43196f16aa22fbad$export$7a954b5c9a93cc61","async","latitude","longitude","response","fetch","json","error","console","log","$89fc16ce552503b6$var$mapEl","document","querySelectorAll","$89fc16ce552503b6$var$stateNameEl","querySelector","$89fc16ce552503b6$var$weatherBlockEl","$89fc16ce552503b6$var$formatUnixTime","time","date","Date","getHours","toString","padStart","getMinutes","forEach","state","style","fill","fillOpacity","stroke","strokeWidth","addEventListener","evt","stateNameText","getAttribute","textContent","geoCodeString","target","split","trim","then","weatherData","main","weather","wind","clouds","sys","weatherDataForMarkup","temp","feelsLike","feels_like","pressure","toFixed","humidity","windSpeed","speed","windGust","gust","all","sunrise","sunset","description","icon","id","classList","remove","data","markup","charAt","toUpperCase","slice","insertAdjacentHTML","$89fc16ce552503b6$var$createMarkupWeather"],"version":3,"file":"map.2bda31a8.js.map"}