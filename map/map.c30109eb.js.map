{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-492831234a2b9927.js","src/map/js/fetchweather.js","node_modules/@parcel/runtime-js/lib/runtime-c038211cf5730368.js","node_modules/@parcel/runtime-js/lib/runtime-7dec85847d6bfa42.js","src/map/js/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"6i47n\\\":\\\"map.c30109eb.js\\\",\\\"jcnm6\\\":\\\"day.6a5ca926.jpeg\\\",\\\"iuldB\\\":\\\"night1.cccc2448.webp\\\",\\\"5Oa7e\\\":\\\"map.98287c0c.css\\\"}\"));","const URL_WEATHER_API = 'https://api.openweathermap.org/data/2.5/weather?';\nconst API_KEY = 'c807f2acdd74ab8a78287327fdf94a6e';\n\nconst fetchWeather = async function (latitude, longitude) {\n  try {\n    const response = await fetch(\n      `${URL_WEATHER_API}lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`\n    );\n    const weatherDate = await response.json();\n    return weatherDate;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { fetchWeather };\n","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"jcnm6\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"iuldB\")).toString();","import 'normalize.css';\nimport { fetchWeather } from './fetchweather';\nimport background_day from '../img/day.jpeg';\nimport background_night from '../img/night1.webp';\n\nconst mapEl = document.querySelectorAll('#map path');\nconst stateNameEl = document.querySelector('.state');\nconst weatherBlockEl = document.querySelector('#weather-block');\nconst containerEl = document.querySelector('.container');\nconst themeCheckboxEl = document.querySelector('.theme-check');\nconst titleEl = document.querySelector('.title');\n\nlet currentState = '';\n\nmapEl.forEach(state => {\n  state.style.fill = '#ffd700';\n  state.style.fillOpacity = '0.3';\n  state.style.stroke = 'rgba(0, 0, 0, 0.3)';\n  state.style.strokeWidth = '1px';\n\n  state.addEventListener('mouseenter', evt => {\n    state.style.fill = '#0057b8';\n\n    const stateNameText = state.getAttribute('title');\n    currentState = stateNameText;\n    stateNameEl.textContent = `, ${stateNameText}`;\n  });\n\n  state.addEventListener('mouseleave', evt => {\n    state.style.fill = '#ffd700';\n    stateNameEl.textContent = '';\n  });\n\n  state.addEventListener('click', evt => {\n    const geoCodeString = evt.target.getAttribute('data-geocode');\n\n    const latitude = geoCodeString.split(',')[0].trim();\n    const longitude = geoCodeString.split(',')[1].trim();\n\n    fetchWeather(latitude, longitude).then(weatherData => {\n      const { main, weather, wind, clouds, sys } = weatherData;\n\n      const weatherDataForMarkup = {\n        temp: Math.round(main.temp),\n        feelsLike: Math.round(main.feels_like),\n        pressure: (main.pressure * 0.750062).toFixed(0),\n        humidity: main.humidity,\n        windSpeed: Math.round(wind.speed),\n        windGust: Math.round(wind.gust),\n        clouds: clouds.all,\n        sunrise: formatUnixTime(sys.sunrise),\n        sunset: formatUnixTime(sys.sunset),\n        description: weather[0].description,\n        icon: weather[0].icon,\n        main: weather[0].main,\n        id: weather[0].id,\n      };\n\n      weatherBlockEl.textContent = '';\n\n      weatherBlockEl.classList.remove('visually-hidden');\n\n      createMarkupWeather(weatherDataForMarkup);\n    });\n  });\n});\n\nfunction createMarkupWeather(data) {\n  const markup = `\n  <div class=\"weather-description\">\n          <h2 class=\"weather-state\">${currentState}</h2>\n          <h2 class=\"descr-title\">${\n            data.description.charAt(0).toUpperCase() + data.description.slice(1)\n          }</h2>\n          <img\n            class=\"weather-img\"\n            src=\"https://openweathermap.org/img/wn/${data.icon}@2x.png\"\n          />\n          <ul class=\"time-wrap weather-list\">\n                <li>sunrise: ${data.sunrise}</li>\n                <li>sunset: ${data.sunset}</li>\n              </ul>\n          </ul>\n        </div>\n        <div class=\"wether-data-wrap\">\n          <ul class=\"weather-list\">\n            <li>Temperature: ${data.temp} °C</li>\n            <li>Feels like: ${data.feelsLike} °C</li>\n            <li>Wind: ${data.windSpeed} m/s</li>\n            <li>Wind gust: ${data.windGust} m/s</li>\n          </ul>\n          <ul class=\"weather-list\">\n            <li>Pressure: ${data.pressure} mmHg</li>\n            <li>Humidity: ${data.humidity} %</li>\n            <li>Cloudiness: ${data.clouds} %</li>\n          </ul>\n        </div>\n  `;\n\n  weatherBlockEl.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction formatUnixTime(time) {\n  const date = new Date(time * 1000);\n\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n\n  return `${hours}:${minutes}`;\n}\n\nsetStartTheme();\n\nfunction setStartTheme() {\n  // const startTheme = new Date().getHours();\n  const startTheme = 2;\n  if (startTheme > 7 && startTheme < 21) {\n    console.log('dayyyy');\n    changeTheme(false);\n    return;\n  }\n  console.log('night');\n  themeCheckboxEl.setAttribute('checked', 'checked');\n  changeTheme(true);\n}\n\nthemeCheckboxEl.addEventListener('click', () => {\n  const themeMode = themeCheckboxEl.checked;\n  changeTheme(themeMode);\n});\n\nfunction changeTheme(mode) {\n  console.log(mode);\n  if (mode) {\n    containerEl.style.backgroundImage = `url(${background_night})`;\n    titleEl.classList.remove('title-light');\n    titleEl.classList.add('title-dark');\n    return;\n  }\n\n  titleEl.classList.remove('title-dark');\n  titleEl.classList.add('title-light');\n  containerEl.style.backgroundImage = `url(${background_day})`;\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$43196f16aa22fbad$export$7a954b5c9a93cc61","async","latitude","longitude","response","fetch","json","error","console","log","$c915397c11e1af43$exports","URL","resolve","import","meta","url","toString","$186784d18df12341$exports","$89fc16ce552503b6$var$mapEl","document","querySelectorAll","$89fc16ce552503b6$var$stateNameEl","querySelector","$89fc16ce552503b6$var$weatherBlockEl","$89fc16ce552503b6$var$containerEl","$89fc16ce552503b6$var$themeCheckboxEl","$89fc16ce552503b6$var$titleEl","$89fc16ce552503b6$var$currentState","$89fc16ce552503b6$var$formatUnixTime","time","date","Date","getHours","padStart","getMinutes","$89fc16ce552503b6$var$changeTheme","mode","style","backgroundImage","$parcel$interopDefault","classList","remove","add","forEach","state","fill","fillOpacity","stroke","strokeWidth","addEventListener","evt","stateNameText","getAttribute","textContent","geoCodeString","target","split","trim","then","weatherData","main","weather","wind","clouds","sys","weatherDataForMarkup","temp","Math","round","feelsLike","feels_like","pressure","toFixed","humidity","windSpeed","speed","windGust","gust","all","sunrise","sunset","description","icon","data","markup","charAt","toUpperCase","slice","insertAdjacentHTML","$89fc16ce552503b6$var$createMarkupWeather","startTheme","setAttribute","$89fc16ce552503b6$var$setStartTheme","checked"],"version":3,"file":"map.c30109eb.js.map"}